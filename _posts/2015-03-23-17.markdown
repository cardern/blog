---
layout: post
title:  "CSS Positioning"
date:   2015-03-23
---
Things learned today:

* Word of the day: [Sprezzatura](http://en.wikipedia.org/wiki/Sprezzatura) - A certain nonchalance, so as to conceal all art and make whatever one does or says appear to be without effort and almost without any thought about it.
* Some tips on [CSS positioning](https://www.youtube.com/watch?v=Rf6zAP4YnZA&list=PLqGj3iMvMa4L731ispRfGAabXeRpM4RL6) from Youtube.
	* By default, elements will have ```position: static``` and all directions set to auto. You can check on this by looking at the Computed tab of dev tools.
	* Relatively positioned elements will create a gap by default, as the flow of statically positioned elements will not move.
	* An absolutely positioned element will be relative to the next parent element that is not static.
	* Setting both the left and right directional properties stretches the element across the screen.
	* Fixed positioning is good for headers or shopping carts since it will always remain on screen.
	* Floating elements (left usually) is important for responsive design, and typically requires a clear either by adding ```clear:both``` to a final div or via this [clearfix hack](http://nicolasgallagher.com/micro-clearfix-hack/) on the container.
	* There are a few ways to center elements with CSS. 
		* ```text-align: center``` on container and ```display: inline-block``` on element
		* ```margin: auto``` on element
		* ```left: 50%``` and ```margin-left: -X px``` on element
		* With flexbox, ```justify-content: center```
	* According to DevTips, SASS > SCSS and LESS. It is less verbose, but requires learning new syntax. This opinion is [contested](http://thesassway.com/editorial/sass-vs-scss-which-syntax-is-better).
	* [Jade](http://jade-lang.com/) is a templating language for HTML, and can help make markup a lot easier to read and write. 
		* No more carets needed, and divs can be replaced with just the class or id.